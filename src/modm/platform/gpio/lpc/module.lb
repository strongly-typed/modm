#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright (c) 2016-2017, Niklas Hauser
# Copyright (c) 2017, Fabian Greif
#
# This file is part of the modm project.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
# -----------------------------------------------------------------------------

def init(module):
    module.name = ":platform:gpio"
    module.description = "General Purpose I/O (GPIO) of NPX LPC devices"

def prepare(module, options):
    if not options[":target"].has_driver("gpio:lpc"):
        print('Return False')
        return False

    module.depends(":platform:core", ":architecture:gpio", ":utils") # ":platform:gpio.common") #, ":platform:i2c.generic")
    print('Return truee')
    return True

def build(env):
    device = env[":target"]
    driver = device.get_driver("gpio")

    properties = device.properties
    properties["target"] = target = device.identifier
    properties["driver"] = driver

    env.substitutions = properties
    env.outbasepath = "modm/src/modm/platform/gpio"

    env.template("gpio.hpp.in")
    env.template("base.hpp.in")
    env.template("unused.hpp.in")
    env.template("software_port.hpp.in")
    # env.copy("gpio_enable.cpp")
